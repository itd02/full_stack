name: Docker Build & Deploy on EC2

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.2.0  # Updated to newer version
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e  # Exit immediately if any command fails
            REPO_NAME=$(basename "$GITHUB_REPOSITORY")
            REPO_DIR="$HOME/$REPO_NAME"

            # System updates and dependencies
            sudo apt-get update -y
            sudo apt-get upgrade -y
            sudo apt-get install -y jq  # Required for parsing GitHub API response

            # Docker installation
            if ! command -v docker &> /dev/null; then
              sudo apt-get install -y docker.io
              sudo usermod -aG docker $USER  # Add current user to docker group
            fi

            # Docker Compose installation
            if ! command -v docker-compose &> /dev/null; then
              LATEST_COMPOSE=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)
              sudo curl -L "https://github.com/docker/compose/releases/download/$LATEST_COMPOSE/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Cleanup existing containers
            if [ -n "$(sudo docker ps -aq)" ]; then
              sudo docker stop $(sudo docker ps -aq)
              sudo docker rm $(sudo docker ps -aq)
            fi

            # Repository management
            if [ ! -d "$REPO_DIR" ]; then
              git clone "https://github.com/$GITHUB_REPOSITORY" "$REPO_DIR"
            else
              cd "$REPO_DIR"
              git fetch origin
              git reset --hard origin/main  # Replace 'main' with your default branch if different
            fi

            # Verify docker-compose file exists
            cd "$REPO_DIR"
            if [ ! -f "./docker-compose.yml" ]; then
              echo "ERROR: docker-compose.yml not found!"
              exit 1
            fi

            # Start services
            sudo docker-compose -f docker-compose.yml up -d --build

            # Health check
            sleep 30
            sudo docker ps
        env:
          PUBLIC_IP_HOST_MACHINE: ${{ secrets.HOST_DNS }}  # Public IP of your EC2 machine
